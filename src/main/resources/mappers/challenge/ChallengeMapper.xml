<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.model.dao.challenge.ChallengeDao">
	<insert id="insert" parameterType="Challenge" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO Challenge
		(name, description, limit_person_num, public_type, challenge_difficulty_id, opportunity)
		VALUES
		(#{name}, #{description}, #{limitPersonNum}, #{publicType}, #{challengeDifficultyId}, #{opportunity})
	</insert>
	<update id="update" parameterType="Challenge">
		UPDATE Challenge
		SET 
			name = #{name},
			description = #{description},
			limit_person_num = #{limitPersonNum},
			public_type = #{publicType},
			challenge_difficulty_id = #{challengeDifficultyId},
			opportunity = #{opportunity}
		WHERE id = #{id}
	</update>
	<select id="search" parameterType="SearchCondition" resultType="Challenge">
		SELECT id, name, created_at, start_at, finish_at, description,
			limit_person_num, public_type, challenge_difficulty_id, opportunity, 
			(select count(*) from challenge_participate where challenge_id = challenge.id) as participateCnt,
			(select count(*) from challenge_like where challenge_id = challenge.id) as likeCnt, 
			(select count(*) from review where challenge_id = challenge.id) as reviewCnt
		FROM Challenge
		<if test="key != 'none'">
			WHERE ${key} LIKE CONCAT('%', #{word}, '%')
		</if>
		<if test="orderBy != 'none'">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>
	<select id="select" parameterType="int" resultType="Challenge">
		SELECT id, name, created_at, start_at, finish_at, description,
			limit_person_num, public_type, challenge_difficulty_id, opportunity, 
			(select count(*) from challenge_participate where challenge_id = challenge.id) as participateCnt,
			(select count(*) from challenge_like where challenge_id = challenge.id) as likeCnt, 
			(select count(*) from review where challenge_id = challenge.id) as reviewCnt
		FROM Challenge WHERE id=#{id}
	</select>
</mapper>
